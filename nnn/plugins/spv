#!/usr/bin/env bash
# shellcheck disable=SC2317

#
# nnn SimplePreView 
#

PREVIEW_PID=/tmp/nnn_preview.pid
FIFO_PID=/tmp/nnn_fifo.pid
NNN_FIFO=${NNN_FIFO:-/tmp/nnn.fifo}
UEBERZUG_FIFO=/tmp/nnn.ueberzug.fifo
THUMBS=~/.cache/thumbnails/video

pidkill() { [ -f "$1" ] && kill "$(cat "$1")" >/dev/null 2>&1; }
fifo_pager() {
    cmd="$1"
    shift

    # We use a FIFO to access $PAGER PID in jobs control
    tmpfifopath=$(mktemp --dry-run)
    mkfifo "$tmpfifopath" || return

    less -P?n --mouse -R < "$tmpfifopath" &
    printf "%s" "$!" > "$PREVIEW_PID"

    (
        exec > "$tmpfifopath"
        if [ "$cmd" = "bat" ];then
            bat --color=always --paging=never \
                --style="$BAT_STYLE" --theme="$BAT_THEME" "$@"
        else
            "$cmd" "$@"
        fi &
    )

    rm "$tmpfifopath"
}
drawimg() { 
    path=$1
    cols=$(tput cols) lines=$(tput lines)
    printf '{"action": "remove", "identifier": "test"}\n' > "$UEBERZUG_FIFO"
    printf '{"action": "add", "identifier": "test", "x": %d, "y": %d, "width": "%d", "height": "%d", "scaler": "cover", "path": "%s"}\n' \
        "${x:-1}" "${y:-0}" "$((cols - 2))" "$((lines - 2))" "$path" > "$UEBERZUG_FIFO"
}
gen_thumb() {
    img=${THUMBS}/${1}.jpg
    if ! [ -f "$img" ];then
        mkdir -p "${img%/*}"
        ffmpegthumbnailer -s 512 -i "$1" -o "$img" 2>/dev/null 
    fi
    printf '%s' "$img"
}
handle_mime() {
    mime=$(file -Lbi -- "$1" | cut -d';' -f1)
    case "$mime" in
        image*)
            if [ -n "$DISPLAY" ];then drawimg "$1"; else mediainfo -- "$1" ;fi ;;
        video*)
            if [ -n "$DISPLAY" ];then
                img=$(gen_thumb "$1")
                drawimg "$img"
            else
                mediainfo -- "$1"
            fi
        ;;
        text/*) fifo_pager bat "$1" ;;
        */x-bittorrent) fifo_pager aria2c -S "$1" ;;
        *) file -b -- "$1" ;;
    esac
}
handle_ext() {
    ext=$(printf '%s' "${1##*.}" | tr '[:upper:]' '[:lower:]')
    case "$ext" in
        srt) fifo_pager bat "$1" ;;
        json) fifo_pager jq -C . "$1" ;;
        gz) fifo_pager gunzip -l "$1" ;;
        7z|a|ace|alz|arc|arj|bz|cab|cpio|deb|jar|lha|lz|lzh|lzma|lzo\
        |rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z)
            fifo_pager atool -l "$1" ;;
        *) handle_mime "$1" ;;
    esac
}
preview() {
    clear
    [ -e "$UEBERZUG_FIFO" ] &&
        printf '{"action": "remove", "identifier": "test"}\n' > "$UEBERZUG_FIFO"

    if [ -d "$1" ];then
        fifo_pager tree -C -L 1 --dirsfirst "$1"
    else
        handle_ext "$1"
    fi
}
preview_fifo() {
    while read -r sel; do
        pidkill "$PREVIEW_PID"
        [ "$sel" = "close" ] && break
        [ -n "$sel" ] && preview "$sel"
    done < "$NNN_FIFO"
}
end() {
    jobs -p | xargs -r kill
    rm "$PREVIEW_PID" "$FIFO_PID" "$UEBERZUG_FIFO" 2>/dev/null
}

if [ "$PREVIEW_MODE" ];then
    if [ -n "$DISPLAY" ];then
        mkfifo "$UEBERZUG_FIFO"
        tail --follow "$UEBERZUG_FIFO" | ueberzug layer --parser json &
    fi
    preview "$1"
    preview_fifo &
    printf '%s' "$!" > "$FIFO_PID"
    trap end EXIT INT HUP
    wait "$!" 
else
    if pidkill "$FIFO_PID";then
        pidkill "$PREVIEW_PID"
    else
        tmux split-window -h -d -l '45%' -e "NNN_FIFO=$NNN_FIFO" \
            -e "FIFO_PID=$FIFO_PID"   -e "PREVIEW_PID=$PREVIEW_PID" \
            -e "BAT_STYLE=$BAT_STYLE" -e "BAT_THEME=$BAT_THEME" \
            -e "PREVIEW_MODE=1" -e "UEBERZUG_FIFO=$UEBERZUG_FIFO" "$0" "$1" &
    fi
fi

exit 0
